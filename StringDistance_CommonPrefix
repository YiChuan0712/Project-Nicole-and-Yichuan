import numpy as np


def StringDistance(str1, str2):
    m = str1.__len__()
    n = str2.__len__()
    distance = np.zeros((m + 1, n + 1))
    for i in range(0, m + 1):
        distance[i, 0] = i
    for i in range(0, n + 1):
        distance[0, i] = i
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if str1[i - 1] == str2[j - 1]:
                cost = 0
            else:
                cost = 1
            distance[i, j] = min(distance[i - 1, j] + 1, distance[i, j - 1] + 1,
                                 distance[i - 1, j - 1] + cost)
    return distance[m, n]


def LongestCommonPrefix(strs):
    for i in range(1, len(strs)):
        l1 = len(strs[0])
        l2 = len(strs[i])
        if l1 > l2:
            l = l2
        else:
            l = l1
        if l == 0:
            return ""
        strs[0]=strs[0][0:l]
        for j in range(l):
            if strs[0][j] != strs[i][j]:
                strs[0] = strs[0][0:j]
                break
        return strs[0]


a = 'bpop.ltr.uc_J..J.all.rand.all.stat.noShow.46'
b = 'bpop.ltr.uc_A..Z.all.asc.all.stat.show.75__it_10'
print('string a: ', a)
print('string b: ', b)


result = StringDistance(a, b)
print('string distance: ', result)
print('similarity: ', 1 - result / max(len(a), len(b)))

c = [a, b]
print('longest common prefix: ', LongestCommonPrefix(c))
